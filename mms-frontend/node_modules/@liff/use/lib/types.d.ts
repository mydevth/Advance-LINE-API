import { SyncHook, AsyncHook } from '@liff/hooks';
declare type TODO = any;
export declare type HookTimings = {
    [key: string]: TODO;
};
export declare type ApiHooks = Record<string, HookTimings>;
export declare type InitInternalHooks = {
    beforeFinished: AsyncHook;
    beforeSuccess: AsyncHook;
    error: AsyncHook<[TODO]>;
};
export declare type InitHooks = {
    before: AsyncHook;
    after: AsyncHook;
};
export declare type LoginHooks = {
    before: SyncHook<[TODO]>;
};
export declare type InternallHooks = {
    init: InitInternalHooks;
};
export declare type OfficialHooks = {
    init: InitHooks;
    login: LoginHooks;
};
export declare type HooksRegisters<Hooks extends ApiHooks> = {
    [api in keyof Hooks]: {
        [hook in keyof Hooks[api]]: Hooks[api][hook]['on'];
    };
};
export interface LiffModule<LiffModuleApi = unknown, LiffModuleOptions = unknown, LiffHookTimings extends HookTimings = HookTimings, LiffInternalHookTimings extends HookTimings = HookTimings, Liff = unknown> {
    install(context: ModuleContext<Liff>, options?: LiffModuleOptions): LiffModuleApi;
    readonly name: string;
    hooks?: LiffHookTimings;
    internalHooks?: LiffInternalHookTimings;
}
export interface ModuleDriver<UserDefineHooks extends ApiHooks = ApiHooks, UserDefineInternalHooks extends ApiHooks = ApiHooks> {
    addModule(name: string, module: LiffModule): void;
    hasModule(name: string): boolean;
    hooks: HooksRegisters<OfficialHooks & UserDefineHooks>;
    internalHooks: HooksRegisters<InternallHooks & UserDefineInternalHooks>;
}
export interface ModuleContext<Liff, UserDefineHooks extends ApiHooks = ApiHooks> {
    liff: Liff;
    hooks: HooksRegisters<OfficialHooks & UserDefineHooks>;
    internalHooks: HooksRegisters<InternallHooks & UserDefineHooks>;
}
export interface LiffPluginContext<Liff, UserDefineHooks extends ApiHooks = {}> {
    liff: Liff;
    hooks: HooksRegisters<OfficialHooks & UserDefineHooks>;
}
export interface LiffPlugin<LiffPluginApi = unknown, LiffPluginOption = unknown, LiffHookTimings extends HookTimings = HookTimings, Liff = unknown> {
    install(context: LiffPluginContext<Liff>, options?: LiffPluginOption): LiffPluginApi;
    readonly name: string;
    hooks?: LiffHookTimings;
}
export {};

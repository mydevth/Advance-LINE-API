import { Config } from '@liff/types';
import { LiffModule, ModuleContext, InitHooks, InitInternalHooks } from '@liff/use';
import type { LiffInstance } from './types';
declare type Init = (config: Config, successCallback?: () => void, errorCallback?: (error: Error) => void) => Promise<void>;
export declare type ExtendLiffCore = {
    init: Init;
};
export declare class InitModule implements LiffModule<Init, unknown, InitHooks, InitInternalHooks> {
    private liff;
    hooks: InitHooks;
    internalHooks: InitInternalHooks;
    get name(): string;
    install({ liff }: ModuleContext<LiffInstance>): Init;
    init(config: Config, successCallback?: () => void, errorCallback?: (error: Error) => void): Promise<void>;
}
export {};
